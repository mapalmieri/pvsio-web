(line_following_robot_with_joystick
 (inc_CW_speed_TCC1 0
  (inc_CW_speed_TCC1-1 nil 3751002818 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (<= const-decl "bool" reals nil)
    (CommandSpeed type-eq-decl nil line_following_robot_with_joystick
     nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (MAX_CW_SPEED const-decl "CommandSpeed"
     line_following_robot_with_joystick nil))
   nil))
 (inc_CCW_speed_TCC1 0
  (inc_CCW_speed_TCC1-1 nil 3751002818 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (<= const-decl "bool" reals nil)
    (CommandSpeed type-eq-decl nil line_following_robot_with_joystick
     nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (MAX_CCW_SPEED const-decl "CommandSpeed"
     line_following_robot_with_joystick nil))
   nil))
 (dec_speed_TCC1 0
  (dec_speed_TCC1-1 nil 3751002818 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (<= const-decl "bool" reals nil)
    (CommandSpeed type-eq-decl nil line_following_robot_with_joystick
     nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (IDLE const-decl "CommandSpeed" line_following_robot_with_joystick
     nil))
   nil))
 (dec_speed_TCC2 0
  (dec_speed_TCC2-1 nil 3751002818 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (<= const-decl "bool" reals nil)
    (CommandSpeed type-eq-decl nil line_following_robot_with_joystick
     nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (IDLE const-decl "CommandSpeed" line_following_robot_with_joystick
     nil))
   nil))
 (dec_speed_TCC3 0
  (dec_speed_TCC3-1 nil 3751002818 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (<= const-decl "bool" reals nil)
    (CommandSpeed type-eq-decl nil line_following_robot_with_joystick
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (IDLE const-decl "CommandSpeed" line_following_robot_with_joystick
     nil))
   nil))
 (dec_speed_TCC4 0
  (dec_speed_TCC4-1 nil 3751002818 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (<= const-decl "bool" reals nil)
    (CommandSpeed type-eq-decl nil line_following_robot_with_joystick
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (IDLE const-decl "CommandSpeed" line_following_robot_with_joystick
     nil))
   nil))
 (accellerate_TCC1 0
  (accellerate_TCC1-1 nil 3750999673 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (CommandSpeed type-eq-decl nil line_following_robot_with_joystick
     nil)
    (real nonempty-type-from-decl nil reals nil)
    (Mode type-decl nil line_following_robot_with_joystick nil)
    (State type-eq-decl nil line_following_robot_with_joystick nil)
    (per_accellerate const-decl "bool"
     line_following_robot_with_joystick nil))
   shostak))
 (brake_TCC1 0
  (brake_TCC1-1 nil 3750999397 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (CommandSpeed type-eq-decl nil line_following_robot_with_joystick
     nil)
    (real nonempty-type-from-decl nil reals nil)
    (Mode type-decl nil line_following_robot_with_joystick nil)
    (State type-eq-decl nil line_following_robot_with_joystick nil)
    (per_brake const-decl "bool" line_following_robot_with_joystick
     nil))
   shostak))
 (tick_TCC1 0
  (tick_TCC1-1 nil 3750999397 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (CommandSpeed type-eq-decl nil line_following_robot_with_joystick
     nil)
    (real nonempty-type-from-decl nil reals nil)
    (Mode type-decl nil line_following_robot_with_joystick nil)
    (State type-eq-decl nil line_following_robot_with_joystick nil)
    (per_tick const-decl "bool" line_following_robot_with_joystick nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (LSR_THRESHOLD const-decl "real" line_following_robot_with_joystick
     nil)
    (leave const-decl "State" line_following_robot_with_joystick nil))
   shostak))
 (tick_TCC2 0
  (tick_TCC2-1 nil 3750999673 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (CommandSpeed type-eq-decl nil line_following_robot_with_joystick
     nil)
    (real nonempty-type-from-decl nil reals nil)
    (Mode type-decl nil line_following_robot_with_joystick nil)
    (State type-eq-decl nil line_following_robot_with_joystick nil)
    (per_tick const-decl "bool" line_following_robot_with_joystick nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (LSR_THRESHOLD const-decl "real" line_following_robot_with_joystick
     nil)
    (leave const-decl "State" line_following_robot_with_joystick nil))
   shostak))
 (tick_TCC3 0
  (tick_TCC3-1 nil 3750999673 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (CommandSpeed type-eq-decl nil line_following_robot_with_joystick
     nil)
    (real nonempty-type-from-decl nil reals nil)
    (Mode type-decl nil line_following_robot_with_joystick nil)
    (State type-eq-decl nil line_following_robot_with_joystick nil)
    (per_tick const-decl "bool" line_following_robot_with_joystick nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (LSR_THRESHOLD const-decl "real" line_following_robot_with_joystick
     nil)
    (leave const-decl "State" line_following_robot_with_joystick nil))
   shostak))
 (tick_TCC4 0
  (tick_TCC4-1 nil 3750999673 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (CommandSpeed type-eq-decl nil line_following_robot_with_joystick
     nil)
    (real nonempty-type-from-decl nil reals nil)
    (Mode type-decl nil line_following_robot_with_joystick nil)
    (State type-eq-decl nil line_following_robot_with_joystick nil)
    (per_tick const-decl "bool" line_following_robot_with_joystick nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (LSR_THRESHOLD const-decl "real" line_following_robot_with_joystick
     nil))
   shostak))
 (turnLeft_TCC1 0
  (turnLeft_TCC1-1 nil 3750999397 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (CommandSpeed type-eq-decl nil line_following_robot_with_joystick
     nil)
    (real nonempty-type-from-decl nil reals nil)
    (Mode type-decl nil line_following_robot_with_joystick nil)
    (State type-eq-decl nil line_following_robot_with_joystick nil)
    (per_turnLeft const-decl "bool" line_following_robot_with_joystick
     nil))
   shostak))
 (turnRight_TCC1 0
  (turnRight_TCC1-1 nil 3750999397 ("" (tcc))
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (CommandSpeed type-eq-decl nil line_following_robot_with_joystick
     nil)
    (real nonempty-type-from-decl nil reals nil)
    (Mode type-decl nil line_following_robot_with_joystick nil)
    (State type-eq-decl nil line_following_robot_with_joystick nil)
    (per_turnRight const-decl "bool" line_following_robot_with_joystick
     nil))
   shostak)))

