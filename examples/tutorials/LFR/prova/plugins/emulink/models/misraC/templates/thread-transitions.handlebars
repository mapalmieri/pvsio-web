{{#if transitions}}/* definition of transition functions */
{{#each transitions}}{{#if id}}state {{id}}(state *st) {
    assert( st->current_state == {{source.name}});
{{~#if condition}}
    if ({{&condition}}) {
        leave({{source.name}}, st);
        {{~#each actions}}
        {{&.}};
        #ifdef DEBUG
        debug_print("Action {{&.}} issued.\n");
        #endif{{/each}}
        enter({{target.name}}, st);
    }
{{~else}}
    leave({{source.name}}, st);
    {{~#each actions}}
    {{&.}};
    #ifdef DEBUG
    debug_print("Action {{&.}} issued.\n");
    #endif{{~/each}}
    enter({{target.name}}, st);
{{~/if}}
    assert( st->current_state == {{target.name}} );
    return *st;
}
{{else}}state {{0.id}}(state *st) {
    assert( {{#each 0.listSources}}st->current_state ==  {{&.}} {{#unless @last}}|| {{/unless}}{{/each}});
{{#each .}}
{{~#if condition}}
    if ( (st->current_state == {{source.name}}) && ({{&condition}}) ) {
        leave({{source.name}}, st);
        {{~#each actions}}
        {{&.}};
        #ifdef DEBUG
        debug_print("Action {{&.}} issued.\n");
        #endif {{/each}}
        enter({{target.name}}, st);
        assert( st->current_state == {{target.name}} );
        return *st;
    }{{~else}}
    if (st->current_state == {{source.name}}) {
        leave({{source.name}}, st);
        {{~#each actions}}
        {{&.}};
        #ifdef DEBUG
        debug_print("Action {{&.}} issued.\n");
        #endif{{~/each}}
        enter({{target.name}}, st);
        assert( st->current_state == {{target.name}} );
        return *st;
    }
{{~/if}}{{/each}}
    return *st;
}
{{/if}}
{{/each}}{{/if}}

{{#if transitions}}/* definition of permission function for transition functions */
{{#each transitions}}{{#if id}}char_t per_{{id}}(const state *st) {
    if (st->current_state == {{source.name}}){ return true; }
    return false;
}
{{else}}char_t per_{{0.id}}(const state *st) {
    if ({{#each 0.listSources}}st->current_state ==  {{&.}} {{#unless @last}}|| {{/unless}}{{/each}}){
        return true;
    }
    return false;
}
{{/if}}
{{/each}}{{/if}}
