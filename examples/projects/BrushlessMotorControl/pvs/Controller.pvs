Controller: THEORY
 BEGIN IMPORTING trig_fnd@sincos_def
  %-- operating modes
  Mode: TYPE = { X1 }

  %-- state attributes
  State: TYPE = [#
    mode: Mode,
    previous_mode: Mode,
    a1: real,
    a2: real,
    a3: real,
    a4: real,
    b: real,
    c1: real,
    c2: real,
    c3: real,
    c4: real,
    c5: real,
    c6: real,
    error_theta: real,
    error_xd: real,
    Id: real,
    Id_des: real,
    Iq: real,
    J: real,
    J1: real,
    J2: real,
    J3: real,
    J4: real,
    k: real,
    k11: real,
    k12: real,
    k21: real,
    k22: real,
    L: real,
    Omega: real,
    p: real,
    pk3: real,
    R: real,
    T1: real,
    T2: real,
    T3: real,
    T4: real,
    Theta: real,
    Theta_des: real,
    Ud_control: real,
    Uq_control: real,
    v1: real,
    v2: real,
    x1: real,
    x2: real,
    x3: real,
    x4: real,
    y1: real,
    y1_des: real,
    y1_diff: real,
    y2: real,
    y2_des: real,
    y2_diff: real,
    z: real
  #]

  %-- init function
  init: State = (#
    previous_mode := X1, 
    mode := X1, 
    a1 := 0.01, 
    a2 := 0.01, 
    a3 := 0.01, 
    a4 := 0, 
    b := 0.01, 
    c1 := 0, 
    c2 := 0, 
    c3 := 0, 
    c4 := 0, 
    c5 := 0, 
    c6 := 0, 
    error_theta := 0, 
    error_xd := 0, 
    Id := 0.0, 
    Id_des := 0.0, 
    Iq := 0.0, 
    J := 0.01, 
    J1 := 0, 
    J2 := 0, 
    J3 := 0, 
    J4 := 0, 
    k := 0.5, 
    k11 := -1000.0, 
    k12 := 0.0, 
    k21 := 0.0, 
    k22 := -100000.0, 
    L := 0.05, 
    Omega := 0.0, 
    p := 3.0, 
    pk3 := 0, 
    R := 3.3, 
    T1 := 4.0, 
    T2 := 2.0, 
    T3 := 1.0, 
    T4 := 0.5, 
    Theta := 10, 
    Theta_des := 0.0, 
    Ud_control := 0, 
    Uq_control := 0, 
    v1 := 0, 
    v2 := 0, 
    x1 := 0, 
    x2 := 0, 
    x3 := 0, 
    x4 := 0, 
    y1 := 0, 
    y1_des := 0, 
    y1_diff := 0, 
    y2 := 0, 
    y2_des := 0, 
    y2_diff := 0, 
    z := 10.0
  #)

  %-- leave/enter functions
  enter(m: Mode)(st: State): State = st WITH [ mode := m ]
  leave(m: Mode)(st: State): State = st WITH [ previous_mode := m ]

  %-- triggers
 % per_tick(st: State): bool = (mode(st) = X1 AND ( true ))
  tick(st: State): State =
    COND
     mode(st) = X1 AND ( true )
      -> LET st = leave(X1)(st),
             st = st WITH [ x1 := Id(st) ],
             st = st WITH [ x2 := Iq(st) ],
             st = st WITH [ x3 := Theta(st) ],
             st = st WITH [ x4 := Omega(st) ],
             st = st WITH [ y1 := x1(st) ],
             st = st WITH [ y2 := x3(st) ],
             st = st WITH [ y1_des := Id_des(st) ],
             st = st WITH [ y2_des := Theta_des(st) ],
             st = st WITH [ error_theta := Theta(st) - Theta_des(st) ],
             st = st WITH [ error_xd := Id(st) - Id_des(st) ],
             st = st WITH [ y1_diff := y1(st) - y1_des(st) ],
             st = st WITH [ y2_diff := y2(st) - y2_des(st) ],
             st = st WITH [ v1 := k11(st) * y1_diff(st) + k12(st) * y2_diff(st) ],
             st = st WITH [ v2 := k21(st) * y1_diff(st) + k22(st) * y2_diff(st) ],
             st = st WITH [ pk3 := 3 * p(st) * k(st) ],
             st = st WITH [ c6 := 3 / 2 * p(st) * k(st) * x2(st) + T1(st) * sin(z(st) * x3(st) + a1(st)) + T2(st) * SIN(2 * z(st) * x3(st) + a2(st)) + T3(st) * SIN(3 * z(st) * x3(st) + a3(st)) + T4(st) * SIN(4 * z(st) * x3(st) + a4(st)) ],
             st = st WITH [ c5 := T1(st) * COS(z(st) * x3(st) + a1(st)) + T2(st) * COS(2 * z(st) * x3(st) + a2(st)) + T3(st) * COS(3 * z(st) * x3(st) + a3(st)) + T4(st) * COS(4 * z(st) * x3(st) + a4(st)) ],
             st = st WITH [ c4 := L(st) * x1(st) + k(st) ],
             st = st WITH [ c3 := - R(st) * x2(st) ],
             st = st WITH [ c2 := 3 / 2 * p(st) * k(st) * c3(st) - p(st) * x4(st) * c4(st) + z(st) * x4(st) * c5(st) - b(st) / J(st) * c6(st) ],
             st = st WITH [ c1 := v2(st) - 1 / J(st) * c2(st) ],
             st = st WITH [ Ud_control := L(st) * v1(st) + R(st) * x1(st) - L(st) * p(st) * x2(st) * x4(st) ],
             st = st WITH [ Uq_control := 2 * J(st) * L(st) / pk3(st) * c1(st) ]
          IN enter(X1)(st)
    ENDCOND

 END Controller
